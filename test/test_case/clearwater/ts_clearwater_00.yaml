################################################
# date: 2018/4/20
# spec: test the scenario of clearwater experiment
# author: x-lab.Leo
################################################

---
schema:
  steps:
    -
      id: 1
      name: monitor-prepare
      type: test
      service:
        name: monitor_service_A
        call: REST
      action: setUp
      args:
        command: setup
        method: POST
        args:
          target: {{hosts}}
    -
      id: 2
      name: monitor-start
      type: test
      service:
        name: monitor_service_A
        call: REST
      action: start
      args:
        command: start
        method: POST
        args:
          target: {{hosts}}
    -
      id: 3
      name: normal-status
      type: test
      service:
        name: faultload_service_B
        call: REST
      action: start
      args:
        command: wait
        method: POST
        args:
          duration: 5m
          target: hosts
    -
      id: 4
      name: cpu-fault-injection
      type: test
      service:
        name: faultload_service_B
        call: REST
      action: start
      args:
        command: cpu-fault
        method: POST
        args:
          duration: 5m
          target: {{hosts}}

    -
      id: 5
      name: cpu-fault-injection-finish
      type: test
      service:
        name: faultload_service_B
        call: REST
      action: stop
      args:
        command: cpu-fault
        method: POST
        args:
          duration: 5m
          target: {{hosts}}
    -
      id: 6
      name: monitor-finish
      type: test
      service:
        name: monitor_service_A
        call: REST
      action: stop
      args:
        command: cpu-fault
        method: POST
        args:
          target: {{hosts}}
    -
      id: 7
      name: test-result-collector
      type: test
      service:
        name: data_collector_service_B
        call: REST
      action: start
      args:
        method: POST
        command: fetch-result
        args:
          from: {{hosts}}
          to: host
        

  flows:
    -
      name: main
      orders:
        -
          type: normal
          step: 1
        -
          type: normal
          step: 2
        -
          type: normal
          step: 3
        -
          type: normal
          step: 4
        -
          type: normal
          step: 5
        -
          type: normal
          step: 6
        -
          type: normal
          step: 7

  hosts:
    -
      ip: 192.168.1.1
      port: 80
      user: root
      password: root
    -
      ip: 192.168.1.2
      port: 80
      user: root
      password: root
    -
      ip: 192.168.1.3
      port: 80
      user: root
      password: root